on:
  schedule:
    - cron: '0 * * * *'
  push:
    branches:
      - 'main'
    paths:
      - '.github/**'
  pull_request:
    branches:
      - 'main'
    paths:
      - '.github/**'
  workflow_dispatch: {}


jobs:

  mirror:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      updatedrefs: ${{ steps.push-all.outputs.updatedrefs }}
    steps:
      - uses: actions/checkout@v4  # Checkout original repository
        with:
          repository: 'rustic-rs/rustic'
          fetch-depth: 0  # Including tags...
      - run: |
          # find $(dirname ${GITHUB_WORKSPACE})
          mv ${GITHUB_WORKSPACE} ${GITHUB_WORKSPACE}_original
          mkdir ${GITHUB_WORKSPACE}
          # echo "==========="
          # find $(dirname ${GITHUB_WORKSPACE})
      - uses: actions/checkout@v4   # Checkout self (to keep our custom files)
        with:
          fetch-depth: 0
      - id: push-all
        run: |
          updated_refs="["
          cd ${GITHUB_WORKSPACE}_original/
          for bt in $(echo "main"; git tag | grep -E "^v.*"); do 
            echo " ============= Processing branch or tag $bt ============= "
            # Delete all non-custom files from our repository (in case of deletions in the original repository)
            cd ${GITHUB_WORKSPACE}/
            if [[ "$bt" == "main" ]]; then
              git checkout main
            else # Auto-create...
              git fetch origin "autobranchfortag_$bt:autobranchfortag_$bt" || true
              git checkout "autobranchfortag_$bt" || ( git checkout main && git branch "autobranchfortag_$bt" )
            fi
            find ${GITHUB_WORKSPACE}/ -type f -not \( -path "${GITHUB_WORKSPACE}/.git/*" -or -path "${GITHUB_WORKSPACE}/.github/*" \) -delete
            find ${GITHUB_WORKSPACE}/ -type d -empty -delete
            # find ${GITHUB_WORKSPACE}/

            # Copy all files from the original repository
            cd ${GITHUB_WORKSPACE}_original/
            git checkout "$bt"
            # HACK: Add curl to image
            sed -i 's,ENTRYPOINT,RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*\n\nENTRYPOINT,' Dockerfile || true
            rsync -a --exclude='.git' --exclude='.github' ${GITHUB_WORKSPACE}_original/ ${GITHUB_WORKSPACE}/
            
            # Push the branch or tag
            cd ${GITHUB_WORKSPACE}/
            git config --global user.name 'yeicor-mirror.yml'
            git config --global user.email 'Yeicor@users.noreply.github.com'
            git add .
            # FIXME: Detect no changes for tags...
            if [[ `git status --porcelain` ]]; then # Changes
              echo "Changes detected..."
              git diff
              git commit -am "Automated sync of original sources"
              if [[ "$bt" != "main" ]]; then
                git tag -f "$bt"
                git push -f origin "autobranchfortag_$bt"
              fi
              git push -f origin $bt
              updated_refs="${updated_refs}\"$bt\","
              echo "Changes pushed..."
            else
              echo "No changes detected..."
            fi
          done
          updated_refs="${updated_refs%,}]"
          echo "updatedrefs=$updated_refs" >> $GITHUB_OUTPUT

  trigger-docker-for-updates:
    needs: [ mirror ]
    if: ${{ needs.mirror.outputs.updatedrefs != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        ref: ${{fromJSON(needs.mirror.outputs.updatedrefs)}}
    permissions:
      contents: read
      packages: write
      id-token: write
    uses: ./.github/workflows/docker-publish.yml
    with:
      ref: ${{ matrix.ref }}
    secrets: inherit
