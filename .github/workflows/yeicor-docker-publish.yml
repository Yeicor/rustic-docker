on:
  # schedule:
  #   - cron: '0 * * * *'
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'main'
  workflow_dispatch: {}


jobs:

  mirror:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      changed: ${{ steps.push.outputs.changed }}
    steps:
      - uses: actions/checkout@v4  # Checkout original repository
        with:
          repository: 'rustic-rs/rustic'
          fetch-depth: 0
      - run: |
          find $(dirname ${GITHUB_WORKSPACE})
          mv ${GITHUB_WORKSPACE} ${GITHUB_WORKSPACE}_original
          mkdir ${GITHUB_WORKSPACE}
          echo "==========="
          find $(dirname ${GITHUB_WORKSPACE})
      - uses: actions/checkout@v4   # Checkout self (to keep our custom files)
        with:
          fetch-depth: 0
      - id: push
        run: |  
          # Delete all non-custom files from our repository (in case of deletions in the original repository)
          find ${GITHUB_WORKSPACE}/ -type f -not \( -path "${GITHUB_WORKSPACE}/.git/*" -or -path "${GITHUB_WORKSPACE}/.github/workflows/yeicor-*" -or -path "${GITHUB_WORKSPACE}/renovate.json" \) -delete
          find ${GITHUB_WORKSPACE}/ -type d -empty -delete
          find ${GITHUB_WORKSPACE}/
          # Copy all files from the original repository
          rsync -a --exclude='.git' ${GITHUB_WORKSPACE}_original/ ${GITHUB_WORKSPACE}/
          # - Removing original workflows
          find ${GITHUB_WORKSPACE}/.github/workflows/ -type f -not \( -path "${GITHUB_WORKSPACE}/.github/workflows/yeicor-*" \) -delete
          git config --global user.name 'yeicor-mirror.yml'
          git config --global user.email 'Yeicor@users.noreply.github.com'
          git add -v .
          if [[ `git status --porcelain` ]]; then # Changes
            git commit -am "Automated sync of original sources"
            git push
            echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "No changes detected..."
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi
          

  docker:

    needs: mirror

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    strategy:
      fail-fast: false
      matrix:
        include:
          - registry: ghcr.io
            username: ${{ github.actor }}
            image_name: ${{ github.repository }}
          - registry: registry.hub.docker.com
            username: yeicor
            image_name: Yeicor/rustic


    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image_name }}
      - name: Login to registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ matrix.registry }}
          username: ${{ matrix.username }}
          password: ${{ matrix.registry == 'ghcr.io' && secrets.GITHUB_TOKEN || secrets.DOCKERHUB_TOKEN }}
      # TODO: cosign
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          build-args: RUST_VERSION=slim-bookworm
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}